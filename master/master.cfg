# -*- python -*-
# ex: set syntax=python:

from buildbot.plugins import *
from password import *
from twisted.python import log
from spackbuildslave import *
from spackfactory import *
from buildbot.status import html
from buildbot.status.web import authz, auth
from buildbot.plugins import status, util
from buildbot.schedulers.trysched import Try_Userpass
from buildbot.schedulers import timed
# This is the dictionary that the buildmaster pays attention to. We also use
# a shorter alias to save typing.
c = BuildmasterConfig = {}

####### PROJECT IDENTITY
bb_master_url="35.167.244.38"
bb_master_port="9989"

bb_master = "%s:%s" % (bb_master_url, bb_master_port) 
bb_url = "https://raw.githubusercontent.com/kielfriedt/spack-buildbot-config/os-cmplr-seperation/scripts/" 
bb_slave_port = 9989
#need to redirect 80 to 8010
bb_web_port = 8010
bb_try_port = 8033

cdash_url = "spack.io/cdash/index.php?project=spack"

# the 'title' string will appear at the top of this buildbot installation's
# home pages (linked to the 'titleURL').

c['title'] = "cdash output for spack"
c['titleURL'] = "https://" + cdash_url

# the 'buildbotURL' string should point to the location where the buildbot's
# internal web server is visible. This typically uses the port number set in 
# the 'www' entry below, but with an externally-visible host name which the 
# buildbot cannot figure out without some help.
# git Configuration
spack_url = "github.com"
spack_project = "LLNL/spack"
spack_branch = "testing/wip_xsdk"
spack_repo_http = "https://%s/%s.git" % (spack_url, spack_project)

c['buildbotURL'] = "http://%s/" % (bb_master_url)

####### FACTORIES
nightly_factory = nightlyTestSuiteFactory(spack_repo_http)
xsdk_factory = xsdkTestSuiteFactory(spack_repo_http)
weekly_factory = weeklyTestSuiteFactory(spack_repo_http)

####### BUILDER PROPERTIES

# The 'builders' list defines the Builders, which tell Buildbot how to perform a build:
# what steps, and which slaves can execute them.  Note that any particular build will
# only take place on one slave.

def merge_dicts(*args):
    z = {}
    for item in args:
        z.update(item)

    return z

### Builder properties are broken out into 3 groups. The groups are described below.
### A builders properties must be a combination of 1 property set from each group.

# Global properties are required properties. These properties control the source
# of scripts to execute and which spl and zfs tags to boot strap with.
global_props = {
    "bburl"       :      bb_url,
    "bbmaster"    :      bb_master_url,
}



# This group of properties controls how lustre is built and whether or not zfs must
# be built for a builder. The four types of builds are as follows:
#     - simple: a basic autogen, configure, and make
#     - deb: autogen, configure, make debs
#     - rpm: autogen, configure, make rpms
builder_default_props = {
    "buildstyle"  :      "rpm",
}

builder_simple_props = {
    "buildstyle"  :      "simple",
}

# Builder properties are a combination of exactly one set of properties from each
# of the above groups.
debiansys_props = merge_dicts(global_props, builder_simple_props)
default_props = merge_dicts(global_props, builder_default_props)


#### BUILDSLAVES
numSlaves = 1  # number of slaves per builder
# only gcc 4.4.7, clang 3.4.2
CentOS_6_8_slaves_gcc_4_4_7 = [
    SpackEC2Slave(
        name="CentOS-6.8-x86_64-buildslave%s" % ("gcc4.4.7_" + str(i)),
        ami="ami-2e5f074e"
    ) for i in range(0, numSlaves)# only gcc4.4.7
]
CentOS_6_8_slaves_clang_3_4_2 = [
    SpackEC2Slave(
        name="CentOS-6.8-x86_64-buildslave%s" % ("clang3.4.2_" + str(i)),
        ami="ami-2e5f074e"
    ) for i in range(0, numSlaves)# only clang3.4.2
]
# only gcc 4.8.5, clang 3.4.2
CentOS_7_2_slaves_gcc_4_8_5 = [
    SpackEC2Slave(
        name="CentOS-7.2-x86_64-buildslave%s" % ("gcc4.8.5_" + str(i)),
        ami="ami-c6520aa6"
    ) for i in range(0, numSlaves) # only gcc4.8.5
]
CentOS_7_2_slaves_clang_3_4_2 = [
    SpackEC2Slave(
        name="CentOS-7.2-x86_64-buildslave%s" % ("clang3.4.2_" + str(i)),
        ami="ami-c6520aa6"
    ) for i in range(0, numSlaves) # only clang3.4.2
]
# only gcc 4.7.4, 4.8.5, 4.9.3, 5.4.0, clang 3.5, 3.6, 3.7, 3.8
Ubuntu_16_04_slaves_gcc_4_7_4 = [
    SpackEC2Slave(
        name="Ubuntu-16.04-x86_64-buildslave%s" % ("gcc4.7.4_" + str(i)),
        ami="ami-0c5d056c"
    ) for i in range(0, numSlaves)
]
Ubuntu_16_04_slaves_gcc_4_8_5 = [
    SpackEC2Slave(
        name="Ubuntu-16.04-x86_64-buildslave%s" % ("gcc4.8.5_" + str(i)),
        ami="ami-0c5d056c"
    ) for i in range(0, numSlaves)
]
Ubuntu_16_04_slaves_gcc_4_9_3 = [
    SpackEC2Slave(
        name="Ubuntu-16.04-x86_64-buildslave%s" % ("gcc4.9.3_" + str(i)),
        ami="ami-0c5d056c"
    ) for i in range(0, numSlaves)
]
Ubuntu_16_04_slaves_gcc_5_4_0 = [
    SpackEC2Slave(
        name="Ubuntu-16.04-x86_64-buildslave%s" % ("gcc5.4.0_" + str(i)),
        ami="ami-0c5d056c"
    ) for i in range(0, numSlaves)
]
Ubuntu_16_04_slaves_clang_3_5 = [
    SpackEC2Slave(
        name="Ubuntu-16.04-x86_64-buildslave%s" % ("clang3.5_" + str(i)),
        ami="ami-0c5d056c"
    ) for i in range(0, numSlaves)
]
Ubuntu_16_04_slaves_clang_3_6 = [
    SpackEC2Slave(
        name="Ubuntu-16.04-x86_64-buildslave%s" % ("clang3.6_" + str(i)),
        ami="ami-0c5d056c"
    ) for i in range(0, numSlaves)
]
Ubuntu_16_04_slaves_clang_3_7 = [
    SpackEC2Slave(
        name="Ubuntu-16.04-x86_64-buildslave%s" % ("clang3.7_" + str(i)),
        ami="ami-0c5d056c"
    ) for i in range(0, numSlaves)
]
Ubuntu_16_04_slaves_clang_3_8 = [
    SpackEC2Slave(
        name="Ubuntu-16.04-x86_64-buildslave%s" % ("clang3.8_" + str(i)),
        ami="ami-0c5d056c"
    ) for i in range(0, numSlaves)
]

Centos6 = CentOS_6_8_slaves_clang_3_4_2 + CentOS_6_8_slaves_gcc_4_4_7
Centos7 = CentOS_7_2_slaves_clang_3_4_2 + CentOS_7_2_slaves_gcc_4_8_5
Ubuntu_16_04_slaves_gcc = Ubuntu_16_04_slaves_gcc_5_4_0 + Ubuntu_16_04_slaves_gcc_4_9_3 + Ubuntu_16_04_slaves_gcc_4_8_5 + Ubuntu_16_04_slaves_gcc_4_7_4
Ubuntu_16_04_slaves_clang = Ubuntu_16_04_slaves_clang_3_5 + Ubuntu_16_04_slaves_clang_3_6 + Ubuntu_16_04_slaves_clang_3_7 + Ubuntu_16_04_slaves_clang_3_8
all_slaves =  Centos6 + Centos7 + Ubuntu_16_04_slaves_gcc + Ubuntu_16_04_slaves_clang

### BUILDERS
nightlybuilders = [
   SpackBuilderConfig(
        name="CentOS 6.8 x86_64 gcc4.4.7 (NIGHTLY)",
        factory=nightly_factory,
        slavenames=[slave.name for slave in CentOS_6_8_slaves_gcc_4_4_7],
        tags=["Build"],
        properties=merge_dicts(default_props, {"distro" : "centos", "distrover" : "6.8", "arch" : "x86_64", "gcc" : "4.4.7", "compiler" : "gcc"}),
    ),
   SpackBuilderConfig(
        name="CentOS 6.8 x86_64 clang3.4.2 (NIGHTLY)",
        factory=nightly_factory,
        slavenames=[slave.name for slave in CentOS_6_8_slaves_clang_3_4_2],
        tags=["Build"],
        properties=merge_dicts(default_props, {"distro" : "centos", "distrover" : "6.8", "arch" : "x86_64", "clang" : "3.4.2", "compiler" : "clang"}),
    ),
    SpackBuilderConfig(
        name="CentOS 7.2 x86_64 gcc4.8.5 (NIGHTLY)",
        factory=nightly_factory,
        slavenames=[slave.name for slave in CentOS_7_2_slaves_gcc_4_8_5],
        tags=["Build"],
        properties=merge_dicts(default_props, {"distro" : "centos", "distrover" : "7.2", "arch" : "x86_64", "gcc" : "4.8.5", "compiler" : "gcc"}),
    ),
   SpackBuilderConfig(
        name="CentOS 7.2 x86_64 clang3.4.2 (NIGHTLY)",
        factory=nightly_factory,
        slavenames=[slave.name for slave in CentOS_7_2_slaves_clang_3_4_2],
        tags=["Build"],
        properties=merge_dicts(default_props, {"distro" : "centos", "distrover" : "7.2", "arch" : "x86_64", "clang" : "3.4.2", "compiler" : "clang"}),
    ),
    SpackBuilderConfig(
        name="Ubuntu 16.04 x86_64 gcc4.7.4 (NIGHTLY)",
        factory=nightly_factory,
        slavenames=[slave.name for slave in Ubuntu_16_04_slaves_gcc_4_7_4],
        tags=["Build"],
        properties=merge_dicts(debiansys_props, {"distro" : "ubuntu", "distrover" : "16.04", "arch" : "x86_64", "gcc" : "4.7", "compiler" : "gcc"}),
    ),
    SpackBuilderConfig(
        name="Ubuntu 16.04 x86_64 gcc4.8.5 (NIGHTLY)",
        factory=nightly_factory,
        slavenames=[slave.name for slave in Ubuntu_16_04_slaves_gcc_4_8_5],
        tags=["Build"],
        properties=merge_dicts(debiansys_props, {"distro" : "ubuntu", "distrover" : "16.04", "arch" : "x86_64", "gcc" : "4.8", "compiler" : "gcc"}),
    ),
    SpackBuilderConfig(
        name="Ubuntu 16.04 x86_64 gcc4.9.3 (NIGHTLY)",
        factory=nightly_factory,
        slavenames=[slave.name for slave in Ubuntu_16_04_slaves_gcc_4_9_3],
        tags=["Build"],
        properties=merge_dicts(debiansys_props, {"distro" : "ubuntu", "distrover" : "16.04", "arch" : "x86_64", "gcc" : "4.9.3", "compiler" : "gcc"}),
    ),
    SpackBuilderConfig(
        name="Ubuntu 16.04 x86_64 gcc5.4.0 (NIGHTLY)",
        factory=nightly_factory,
        slavenames=[slave.name for slave in Ubuntu_16_04_slaves_gcc_5_4_0],
        tags=["Build"],
        properties=merge_dicts(debiansys_props, {"distro" : "ubuntu", "distrover" : "16.04", "arch" : "x86_64", "gcc" : "5.4.0", "compiler" : "gcc"}),
    ),
    SpackBuilderConfig(
        name="Ubuntu 16.04 x86_64 clang3.5 (NIGHTLY)",
        factory=nightly_factory,
        slavenames=[slave.name for slave in Ubuntu_16_04_slaves_clang_3_5],
        tags=["Build"],
        properties=merge_dicts(debiansys_props, {"distro" : "ubuntu", "distrover" : "16.04", "arch" : "x86_64", "clang" : "3.5.2-3ubuntu1", "compiler" : "clang"}),
    ),
    SpackBuilderConfig(
        name="Ubuntu 16.04 x86_64 clang3.6 (NIGHTLY)",
        factory=nightly_factory,
        slavenames=[slave.name for slave in Ubuntu_16_04_slaves_clang_3_6],
        tags=["Build"],
        properties=merge_dicts(debiansys_props, {"distro" : "ubuntu", "distrover" : "16.04", "arch" : "x86_64", "clang" : "3.6.2-3ubuntu2", "compiler" : "clang"}),
    ),
    SpackBuilderConfig(
        name="Ubuntu 16.04 x86_64 clang3.7 (NIGHTLY)",
        factory=nightly_factory,
        slavenames=[slave.name for slave in Ubuntu_16_04_slaves_clang_3_7],
        tags=["Build"],
        properties=merge_dicts(debiansys_props, {"distro" : "ubuntu", "distrover" : "16.04", "arch" : "x86_64", "clang" : "3.7.1-2ubuntu2", "compiler" : "clang"}),
    ),
    SpackBuilderConfig(
        name="Ubuntu 16.04 x86_64 clang3.8 (NIGHTLY)",
        factory=nightly_factory,
        slavenames=[slave.name for slave in Ubuntu_16_04_slaves_clang_3_8],
        tags=["Build"],
        properties=merge_dicts(debiansys_props, {"distro" : "ubuntu", "distrover" : "16.04", "arch" : "x86_64", "clang" : "3.8.0-2ubuntu4", "compiler" : "clang"}),
    ),
]
xsdkbuilders = [
        SpackBuilderConfig(
        name="CentOS 6.8 x86_64 gcc4.4.7 (XSDK)",
        factory=xsdk_factory,
        slavenames=[slave.name for slave in CentOS_6_8_slaves_gcc_4_4_7],
        tags=["Build"],
        properties=merge_dicts(default_props, {"distro" : "centos", "distrover" : "6.8", "arch" : "x86_64", "gcc" : "4.4.7", "compiler" : "gcc"}),
    ),
   SpackBuilderConfig(
        name="CentOS 6.8 x86_64 clang3.4.2 (XSDK)",
        factory=xsdk_factory,
        slavenames=[slave.name for slave in CentOS_6_8_slaves_clang_3_4_2],
        tags=["Build"],
        properties=merge_dicts(default_props, {"distro" : "centos", "distrover" : "6.8", "arch" : "x86_64", "clang" : "3.4.2", "compiler" : "clang"}),
    ),
    SpackBuilderConfig(
        name="CentOS 7.2 x86_64 gcc4.8.5 (XSDK)",
        factory=xsdk_factory,
        slavenames=[slave.name for slave in CentOS_7_2_slaves_gcc_4_8_5],
        tags=["Build"],
        properties=merge_dicts(default_props, {"distro" : "centos", "distrover" : "7.2", "arch" : "x86_64", "gcc" : "4.8.5", "compiler" : "gcc"}),
    ),
   SpackBuilderConfig(
        name="CentOS 7.2 x86_64 clang3.4.2 (XSDK)",
        factory=xsdk_factory,
        slavenames=[slave.name for slave in CentOS_7_2_slaves_clang_3_4_2],
        tags=["Build"],
        properties=merge_dicts(default_props, {"distro" : "centos", "distrover" : "7.2", "arch" : "x86_64", "clang" : "3.4.2", "compiler" : "clang"}),
    ),
    SpackBuilderConfig(
        name="Ubuntu 16.04 x86_64 gcc4.7.4 (XSDK)",
        factory=xsdk_factory,
        slavenames=[slave.name for slave in Ubuntu_16_04_slaves_gcc_4_7_4],
        tags=["Build"],
        properties=merge_dicts(debiansys_props, {"distro" : "ubuntu", "distrover" : "16.04", "arch" : "x86_64", "gcc" : "4.7", "compiler" : "gcc"}),
    ),
    SpackBuilderConfig(
        name="Ubuntu 16.04 x86_64 gcc4.8.5 (XSDK)",
        factory=xsdk_factory,
        slavenames=[slave.name for slave in Ubuntu_16_04_slaves_gcc_4_8_5],
        tags=["Build"],
        properties=merge_dicts(debiansys_props, {"distro" : "ubuntu", "distrover" : "16.04", "arch" : "x86_64", "gcc" : "4.8", "compiler" : "gcc"}),
    ),
    SpackBuilderConfig(
        name="Ubuntu 16.04 x86_64 gcc4.9.3 (XSDK)",
        factory=xsdk_factory,
        slavenames=[slave.name for slave in Ubuntu_16_04_slaves_gcc_4_9_3],
        tags=["Build"],
        properties=merge_dicts(debiansys_props, {"distro" : "ubuntu", "distrover" : "16.04", "arch" : "x86_64", "gcc" : "4.9.3", "compiler" : "gcc"}),
    ),
    SpackBuilderConfig(
        name="Ubuntu 16.04 x86_64 gcc5.4.0 (XSDK)",
        factory=xsdk_factory,
        slavenames=[slave.name for slave in Ubuntu_16_04_slaves_gcc_5_4_0],
        tags=["Build"],
        properties=merge_dicts(debiansys_props, {"distro" : "ubuntu", "distrover" : "16.04", "arch" : "x86_64", "gcc" : "5.4.0", "compiler" : "gcc"}),
    ),
    SpackBuilderConfig(
        name="Ubuntu 16.04 x86_64 clang3.5 (XSDK)",
        factory=xsdk_factory,
        slavenames=[slave.name for slave in Ubuntu_16_04_slaves_clang_3_5],
        tags=["Build"],
        properties=merge_dicts(debiansys_props, {"distro" : "ubuntu", "distrover" : "16.04", "arch" : "x86_64", "clang" : "3.5.2-3ubuntu1", "compiler" : "clang"}),
    ),
    SpackBuilderConfig(
        name="Ubuntu 16.04 x86_64 clang3.6 (XSDK)",
        factory=xsdk_factory,
        slavenames=[slave.name for slave in Ubuntu_16_04_slaves_clang_3_6],
        tags=["Build"],
        properties=merge_dicts(debiansys_props, {"distro" : "ubuntu", "distrover" : "16.04", "arch" : "x86_64", "clang" : "3.6.2-3ubuntu2", "compiler" : "clang"}),
    ),
    SpackBuilderConfig(
        name="Ubuntu 16.04 x86_64 clang3.7 (XSDK)",
        factory=xsdk_factory,
        slavenames=[slave.name for slave in Ubuntu_16_04_slaves_clang_3_7],
        tags=["Build"],
        properties=merge_dicts(debiansys_props, {"distro" : "ubuntu", "distrover" : "16.04", "arch" : "x86_64", "clang" : "3.7.1-2ubuntu2", "compiler" : "clang"}),
    ),
    SpackBuilderConfig(
        name="Ubuntu 16.04 x86_64 clang3.8 (XSDK)",
        factory=xsdk_factory,
        slavenames=[slave.name for slave in Ubuntu_16_04_slaves_clang_3_8],
        tags=["Build"],
        properties=merge_dicts(debiansys_props, {"distro" : "ubuntu", "distrover" : "16.04", "arch" : "x86_64", "clang" : "3.8.0-2ubuntu4", "compiler" : "clang"}),
    ),
]
weeklybuilders = [
        SpackBuilderConfig(
        name="CentOS 6.8 x86_64 gcc4.4.7 (WEEKLY)",
        factory=weekly_factory,
        slavenames=[slave.name for slave in CentOS_6_8_slaves_gcc_4_4_7],
        tags=["Build"],
        properties=merge_dicts(default_props, {"distro" : "centos", "distrover" : "6.8", "arch" : "x86_64", "gcc" : "4.4.7", "compiler" : "gcc"}),
    ),
   SpackBuilderConfig(
        name="CentOS 6.8 x86_64 clang3.4.2 (WEEKLY)",
        factory=weekly_factory,
        slavenames=[slave.name for slave in CentOS_6_8_slaves_clang_3_4_2],
        tags=["Build"],
        properties=merge_dicts(default_props, {"distro" : "centos", "distrover" : "6.8", "arch" : "x86_64", "clang" : "3.4.2", "compiler" : "clang"}),
    ),
    SpackBuilderConfig(
        name="CentOS 7.2 x86_64 gcc4.8.5 (WEEKLY)",
        factory=weekly_factory,
        slavenames=[slave.name for slave in CentOS_7_2_slaves_gcc_4_8_5],
        tags=["Build"],
        properties=merge_dicts(default_props, {"distro" : "centos", "distrover" : "7.2", "arch" : "x86_64", "gcc" : "4.8.5", "compiler" : "gcc"}),
    ),
   SpackBuilderConfig(
        name="CentOS 7.2 x86_64 clang3.4.2 (WEEKLY)",
        factory=weekly_factory,
        slavenames=[slave.name for slave in CentOS_7_2_slaves_clang_3_4_2],
        tags=["Build"],
        properties=merge_dicts(default_props, {"distro" : "centos", "distrover" : "7.2", "arch" : "x86_64", "clang" : "3.4.2", "compiler" : "clang"}),
    ),
    SpackBuilderConfig(
        name="Ubuntu 16.04 x86_64 gcc4.7.4 (WEEKLY)",
        factory=weekly_factory,
        slavenames=[slave.name for slave in Ubuntu_16_04_slaves_gcc_4_7_4],
        tags=["Build"],
        properties=merge_dicts(debiansys_props, {"distro" : "ubuntu", "distrover" : "16.04", "arch" : "x86_64", "gcc" : "4.7", "compiler" : "gcc"}),
    ),
    SpackBuilderConfig(
        name="Ubuntu 16.04 x86_64 gcc4.8.5 (WEEKLY)",
        factory=weekly_factory,
        slavenames=[slave.name for slave in Ubuntu_16_04_slaves_gcc_4_8_5],
        tags=["Build"],
        properties=merge_dicts(debiansys_props, {"distro" : "ubuntu", "distrover" : "16.04", "arch" : "x86_64", "gcc" : "4.8", "compiler" : "gcc"}),
    ),
    SpackBuilderConfig(
        name="Ubuntu 16.04 x86_64 gcc4.9.3 (WEEKLY)",
        factory=weekly_factory,
        slavenames=[slave.name for slave in Ubuntu_16_04_slaves_gcc_4_9_3],
        tags=["Build"],
        properties=merge_dicts(debiansys_props, {"distro" : "ubuntu", "distrover" : "16.04", "arch" : "x86_64", "gcc" : "4.9.3", "compiler" : "gcc"}),
    ),
    SpackBuilderConfig(
        name="Ubuntu 16.04 x86_64 gcc5.4.0 (WEEKLY)",
        factory=weekly_factory,
        slavenames=[slave.name for slave in Ubuntu_16_04_slaves_gcc_5_4_0],
        tags=["Build"],
        properties=merge_dicts(debiansys_props, {"distro" : "ubuntu", "distrover" : "16.04", "arch" : "x86_64", "gcc" : "5.4.0", "compiler" : "gcc"}),
    ),
    SpackBuilderConfig(
        name="Ubuntu 16.04 x86_64 clang3.5 (WEEKLY)",
        factory=weekly_factory,
        slavenames=[slave.name for slave in Ubuntu_16_04_slaves_clang_3_5],
        tags=["Build"],
        properties=merge_dicts(debiansys_props, {"distro" : "ubuntu", "distrover" : "16.04", "arch" : "x86_64", "clang" : "3.5.2-3ubuntu1", "compiler" : "clang"}),
    ),
    SpackBuilderConfig(
        name="Ubuntu 16.04 x86_64 clang3.6 (WEEKLY)",
        factory=weekly_factory,
        slavenames=[slave.name for slave in Ubuntu_16_04_slaves_clang_3_6],
        tags=["Build"],
        properties=merge_dicts(debiansys_props, {"distro" : "ubuntu", "distrover" : "16.04", "arch" : "x86_64", "clang" : "3.6.2-3ubuntu2", "compiler" : "clang"}),
    ),
    SpackBuilderConfig(
        name="Ubuntu 16.04 x86_64 clang3.7 (WEEKLY)",
        factory=weekly_factory,
        slavenames=[slave.name for slave in Ubuntu_16_04_slaves_clang_3_7],
        tags=["Build"],
        properties=merge_dicts(debiansys_props, {"distro" : "ubuntu", "distrover" : "16.04", "arch" : "x86_64", "clang" : "3.7.1-2ubuntu2", "compiler" : "clang"}),
    ),
    SpackBuilderConfig(
        name="Ubuntu 16.04 x86_64 clang3.8 (WEEKLY)",
        factory=weekly_factory,
        slavenames=[slave.name for slave in Ubuntu_16_04_slaves_clang_3_8],
        tags=["Build"],
        properties=merge_dicts(debiansys_props, {"distro" : "ubuntu", "distrover" : "16.04", "arch" : "x86_64", "clang" : "3.8.0-2ubuntu4", "compiler" : "clang"}),
    ),
]
all_builders = xsdkbuilders + nightlybuilders + weeklybuilders

c['builders'] = all_builders

# The 'slaves' list defines the set of recognized buildslaves. Each element is
# a BuildSlave object, specifying a unique slave name and password.  The same
# slave name and password must be configured on the slave.
c['slaves'] = all_slaves

def prioritizeBuilders(buildmaster, builders):
    """
    Called by the buildmaster to prioritize the builders.  Returns a sorted
    array of builders designed to improve ec2 utilization. Builders with
    substantiated, idle slaves are given priority. Followed by builders with no
    substantiated slaves. The lowest priority is a builder that is busy.
    This helps keep all buildslaves busy while new latent buildslaves are 
    bootstrapped, a process which can take several minutes.
    """

    idle_builders = []
    busy_builders = []
    avail_builders = []

    for b in builders:
        idle = False
        busy = False
        for s in b.slaves:
            if s.isIdle():
               idle = True
               break

            if s.isBusy():
               busy = True

        if idle is True:
            if re.search('BUILD', b.name):
                idle_builders.insert(0, b)
            else:
                idle_builders.append(b)
        elif busy is True:
            if re.search('BUILD', b.name):
                busy_builders.insert(0, b)
            else:
                busy_builders.append(b)
        else:
            if re.search('BUILD', b.name):
                avail_builders.insert(0, b)
            else:
                avail_builders.append(b)

    sorted_builders = idle_builders + avail_builders + busy_builders

    log.msg("prioritized %i builder(s): %s" % (len(sorted_builders),
        [b.name for b in sorted_builders]))

    return sorted_builders

c['prioritizeBuilders'] = prioritizeBuilders

# 'protocols' contains information about protocols which master will use for
# communicating with slaves. You must define at least 'port' option that slaves 
# could connect to your master with this protocol.
# 'port' must match the value configured into the buildslaves (with their
# --master option)
c['protocols'] = {'pb': {'port': bb_slave_port}}


####### SCHEDULERS

# Configure the Schedulers, which decide how to react to incoming changes.  In this
# case, just kick off a 'runtests' build
c['schedulers'] = [
timed.Nightly(name="xsdk_nightly_monday",
                    builderNames=[builder.name for builder in xsdkbuilders],
                    hour=8,
                    dayOfWeek=0,
                    branch=spack_branch,
                    minute=30),
timed.Nightly(name="xsdk_nightly_tuesday",
                    builderNames=[builder.name for builder in xsdkbuilders],
                    hour=8,
                    dayOfWeek=1,
                    branch=spack_branch,
                    minute=30),
timed.Nightly(name="xsdk_nightly_wednesday",
                    builderNames=[builder.name for builder in xsdkbuilders],
                    hour=8,
                    dayOfWeek=2,
                    branch=spack_branch,
                    minute=30),
timed.Nightly(name="xsdk_nightly_thursday",
                    builderNames=[builder.name for builder in xsdkbuilders],
                    hour=8,
                    dayOfWeek=3,
                    branch=spack_branch,
                    minute=30),
timed.Nightly(name="xsdk_nightly_friday",
                    builderNames=[builder.name for builder in xsdkbuilders],
                    hour=8,
                    dayOfWeek=4,
                    branch=spack_branch,
                    minute=30),
timed.Nightly(name="nightly_monday",
                    builderNames=[builder.name for builder in nightlybuilders],
                    hour=8,
                    dayOfWeek=0,
                    branch=spack_branch,
                    minute=15),
timed.Nightly(name="nightly_tuesday",
                    builderNames=[builder.name for builder in nightlybuilders],
                    hour=8,
                    dayOfWeek=1,
                    branch=spack_branch,
                    minute=15),
timed.Nightly(name="nightly_wednesday",
                    builderNames=[builder.name for builder in nightlybuilders],
                    hour=8,
                    dayOfWeek=2,
                    branch=spack_branch,
                    minute=15),
timed.Nightly(name="nightlythursday",
                    builderNames=[builder.name for builder in nightlybuilders],
                    hour=8,
                    dayOfWeek=3,
                    branch=spack_branch,
                    minute=15),
timed.Nightly(name="nightly_friday",
                    builderNames=[builder.name for builder in nightlybuilders],
                    hour=8,
                    dayOfWeek=4,
                    branch=spack_branch,
                    minute=15),
timed.Nightly(name="weekly_saturday",
                    builderNames=[builder.name for builder in weeklybuilders],
                    dayOfWeek=5,
                    hour=8,
                    branch=spack_branch,
                    minute=15),                 
]


####### STATUS TARGETS

# 'status' is a list of Status Targets. The results of each build will be
# pushed to these targets. buildbot/status/*.py has a variety to choose from,
# like IRC bots.

authz_cfg=util.Authz(
    auth=util.BasicAuth(web_userpass),
    gracefulShutdown = False,
    pingBuilder = False,
    pauseSlave = 'auth',
    stopBuild = 'auth',
    stopAllBuilds = 'auth',
    forceBuild = 'auth',
    forceAllBuilds = 'auth',
    cancelPendingBuild = 'auth',
)

c['status'] = [
    # web status
    html.WebStatus(
        http_port=bb_web_port,
        order_console_by_time=True,
        authz=authz_cfg)
]

####### DB URL

c['db'] = {
    # This specifies what database buildbot uses to store its state.  You can leave
    # this at its default for all but the largest installations.
    'db_url' : "sqlite:///state.sqlite",
}